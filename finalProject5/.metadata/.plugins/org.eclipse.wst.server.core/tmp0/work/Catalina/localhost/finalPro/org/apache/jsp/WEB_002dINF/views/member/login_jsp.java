/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.48
 * Generated at: 2018-04-16 06:08:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1520406738000L));
    _jspx_dependants.put("jar:file:/C:/finalProject5/finalProject2/finalPro/src/main/webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인페이지</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* NOTE: The styles were added inline because Prefixfree needs access to your styles and they must be inlined if they are on local disk! */\r\n");
      out.write("@import url(https://fonts.googleapis.com/css?family=Exo:100,200,400);\r\n");
      out.write("@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:700,400,300);\r\n");
      out.write("\r\n");
      out.write("body{\r\n");
      out.write("margin: 0;\r\n");
      out.write("padding: 0;\r\n");
      out.write("background: #fff;\r\n");
      out.write("\r\n");
      out.write("color: #fff;\r\n");
      out.write("font-family: Arial;\r\n");
      out.write("font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".body{\r\n");
      out.write("position: absolute;\r\n");
      out.write("top: -20px;\r\n");
      out.write("left: -20px;\r\n");
      out.write("right: -40px;\r\n");
      out.write("bottom: -40px;\r\n");
      out.write("width: auto;\r\n");
      out.write("height: auto;\r\n");
      out.write("background-image: url(http://ginva.com/wp-content/uploads/2012/07/city-skyline-wallpapers-008.jpg);\r\n");
      out.write("background-size: cover;\r\n");
      out.write("-webkit-filter: blur(5px);\r\n");
      out.write("z-index: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".grad{\r\n");
      out.write("position: absolute;\r\n");
      out.write("top: -20px;\r\n");
      out.write("left: -20px;\r\n");
      out.write("right: -40px;\r\n");
      out.write("bottom: -40px;\r\n");
      out.write("width: auto;\r\n");
      out.write("height: auto;\r\n");
      out.write("background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(0,0,0,0)), color-stop(100%,rgba(0,0,0,0.65))); /* Chrome,Safari4+ */\r\n");
      out.write("z-index: 1;\r\n");
      out.write("opacity: 0.7;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header{\r\n");
      out.write("position: absolute;\r\n");
      out.write("top: calc(50% - 35px);\r\n");
      out.write("left: calc(50% - 255px);\r\n");
      out.write("z-index: 2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header div{\r\n");
      out.write("float: left;\r\n");
      out.write("color: #fff;\r\n");
      out.write("font-family: 'Exo', sans-serif;\r\n");
      out.write("font-size: 35px;\r\n");
      out.write("font-weight: 200;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header div span{\r\n");
      out.write("color: #5379fa !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login{\r\n");
      out.write("position: absolute;\r\n");
      out.write("top: calc(50% - 75px);\r\n");
      out.write("left: calc(55% - 50px);\r\n");
      out.write("height: 150px;\r\n");
      out.write("width: 350px;\r\n");
      out.write("padding: 10px;\r\n");
      out.write("z-index: 2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login input[type=text]{\r\n");
      out.write("width: 250px;\r\n");
      out.write("height: 30px;\r\n");
      out.write("background: transparent;\r\n");
      out.write("border: 1px solid rgba(255,255,255,0.6);\r\n");
      out.write("border-radius: 2px;\r\n");
      out.write("color: #fff;\r\n");
      out.write("font-family: 'Exo', sans-serif;\r\n");
      out.write("font-size: 16px;\r\n");
      out.write("font-weight: 400;\r\n");
      out.write("padding: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login input[type=password]{\r\n");
      out.write("width: 250px;\r\n");
      out.write("height: 30px;\r\n");
      out.write("background: transparent;\r\n");
      out.write("border: 1px solid rgba(255,255,255,0.6);\r\n");
      out.write("border-radius: 2px;\r\n");
      out.write("color: #fff;\r\n");
      out.write("font-family: 'Exo', sans-serif;\r\n");
      out.write("font-size: 16px;\r\n");
      out.write("font-weight: 400;\r\n");
      out.write("padding: 4px;\r\n");
      out.write("margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login input[type=submit]{\r\n");
      out.write("width: 260px;\r\n");
      out.write("height: 35px;\r\n");
      out.write("background: #fff;\r\n");
      out.write("border: 1px solid #fff;\r\n");
      out.write("cursor: pointer;\r\n");
      out.write("border-radius: 2px;\r\n");
      out.write("color: #a18d6c;\r\n");
      out.write("font-family: 'Exo', sans-serif;\r\n");
      out.write("font-size: 16px;\r\n");
      out.write("font-weight: 400;\r\n");
      out.write("padding: 6px;\r\n");
      out.write("margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write(".login input[type=button]{\r\n");
      out.write("width: 260px;\r\n");
      out.write("height: 35px;\r\n");
      out.write("background: #fff;\r\n");
      out.write("border: 1px solid #fff;\r\n");
      out.write("cursor: pointer;\r\n");
      out.write("border-radius: 2px;\r\n");
      out.write("color: #a18d6c;\r\n");
      out.write("font-family: 'Exo', sans-serif;\r\n");
      out.write("font-size: 16px;\r\n");
      out.write("font-weight: 400;\r\n");
      out.write("padding: 6px;\r\n");
      out.write("margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login input[type=submit]:hover{\r\n");
      out.write("opacity: 0.8;\r\n");
      out.write("}\r\n");
      out.write(".login input[type=button]:hover{\r\n");
      out.write("opacity: 0.8;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login input[type=submit]:active{\r\n");
      out.write("opacity: 0.6;\r\n");
      out.write("}\r\n");
      out.write(".login input[type=button]:active{\r\n");
      out.write("opacity: 0.6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login input[type=text]:focus{\r\n");
      out.write("outline: none;\r\n");
      out.write("border: 1px solid rgba(255,255,255,0.9);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login input[type=password]:focus{\r\n");
      out.write("outline: none;\r\n");
      out.write("border: 1px solid rgba(255,255,255,0.9);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login input[type=submit]:focus{\r\n");
      out.write("outline: none;\r\n");
      out.write("}\r\n");
      out.write(".login input[type=button]:focus{\r\n");
      out.write("outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("::-webkit-input-placeholder{\r\n");
      out.write("color: rgba(255,255,255,0.6);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("::-moz-input-placeholder{\r\n");
      out.write("color: rgba(255,255,255,0.6);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("        $(\"#btnLogin\").click(function(){\r\n");
      out.write("            // 태크.val() : 태그에 입력된 값\r\n");
      out.write("            // 태크.val(\"값\") : 태그의 값을 변경 \r\n");
      out.write("            var userId = $(\"#member_id\").val();\r\n");
      out.write("            var userPw = $(\"#member_pwd\").val();\r\n");
      out.write("            if(userId == \"\"){\r\n");
      out.write("                alert(\"아이디를 입력하세요.\");\r\n");
      out.write("                $(\"#member_id\").focus(); // 입력포커스 이동\r\n");
      out.write("                return false; // 함수 종료\r\n");
      out.write("            }\r\n");
      out.write("            if(userPw == \"\"){\r\n");
      out.write("                alert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("                $(\"#member_pwd\").focus();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            /* if(msg == \"black\"){\r\n");
      out.write("               alert(\"응 니블랙\");\r\n");
      out.write("            } */\r\n");
      out.write("            // 폼 내부의 데이터를 전송할 주소\r\n");
      out.write("            document.form1.action=\"loginCheck.do\"\r\n");
      out.write("            // 제출\r\n");
      out.write("            document.form1.submit();\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    function searchId(){\r\n");
      out.write("       window.name = \"parentForm\";\r\n");
      out.write("        window.open(\"searchId.do\",\r\n");
      out.write("                \"chkForm\", \"width=500, height=300, resizable = no, scrollbars = no, left=500, top=200\");\r\n");
      out.write("   }\r\n");
      out.write("    \r\n");
      out.write("    function searchPwd(){\r\n");
      out.write("          window.name = \"parentForm\";\r\n");
      out.write("           window.open(\"searchPwd.do\",\r\n");
      out.write("                   \"chkForm\", \"width=500, height=300, resizable = no, scrollbars = no, left=500, top=200\");\r\n");
      out.write("      }\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>로그인</h2>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <div class=\"body\"></div>\r\n");
      out.write("      <div class=\"grad\"></div>\r\n");
      out.write("      <div class=\"header\">\r\n");
      out.write("         <a href=\"about.jsp\" class=\"title\"><div><b>Travel</b><span><b>Stargram</b></span></div></a>\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         <!-- <tt style=\"color:red\">T</tt><tt style=\"color:#E26812\">r</tt><tt style=\"color:#FDE102\">a</tt>\r\n");
      out.write("               <tt style=\"color:#03A200\">v</tt><tt style=\"color:#030AF5\">l</tt><tt style=\"color:#094B6E\">e</tt>\r\n");
      out.write("               <tt style=\"color:#82108D\">S</tt><tt style=\"color:red\">t</tt><tt style=\"color:#E26812\">a</tt>\r\n");
      out.write("               <tt style=\"color:#FDE102\">r</tt><tt style=\"color:#03A200\">g</tt><tt style=\"color:#030AF5\">r</tt>\r\n");
      out.write("               <tt style=\"color:#094B6E\">a</tt><tt style=\"color:#82108D\">m</tt> -->\r\n");
      out.write("         \r\n");
      out.write("      </div>\r\n");
      out.write("      <br>\r\n");
      out.write("    <form name=\"form1\" action=\"login.do\" method=\"post\">\r\n");
      out.write("    <fieldset id=\"login_fs\">\r\n");
      out.write("      <div class=\"login\">\r\n");
      out.write("      <input type=\"hidden\" name=\"url\" value=\"<?php echo $login_url ?>\">\r\n");
      out.write("            <input type=\"text\" placeholder=\"아이디\" name=\"member_id\" id=\"member_id\" size=\"20\" maxLength=\"20\"><br>\r\n");
      out.write("            <input type=\"hidden\" value=\"$('#member_id').val()\">\r\n");
      out.write("            <input type=\"password\" placeholder=\"비밀번호\" name=\"member_pwd\" id=\"member_pwd\" size=\"20\" maxLength=\"20\"><br><br>\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                <br>\r\n");
      out.write("                <a style=\"font-size:15px\" onClick=\"javascript:searchId()\" href=\"#\">아이디 찾기</a> &ensp; / &ensp; \r\n");
      out.write("                <a style=\"font-size:15px\" onClick=\"javascript:searchPwd()\" href=\"#\">비밀번호 찾기</a>\r\n");
      out.write("            <input type=\"submit\" value=\"로그인\" class=\"btn_submit\" id=\"btnLogin\">\r\n");
      out.write("              <input type=\"button\" value=\"회원가입\" class=\"btn_register\" onClick=\"location.href='enrollForm.do'\">\r\n");
      out.write("              \r\n");
      out.write("      </div>\r\n");
      out.write("      </fieldset>\r\n");
      out.write("\r\n");
      out.write("      </form>\r\n");
      out.write("  <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/login.jsp(242,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg == 'failure'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                    <div style=\"color: red\">\r\n");
          out.write("                        아이디 또는 비밀번호가 일치하지 않습니다.\r\n");
          out.write("                    </div>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/member/login.jsp(247,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg == 'black'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                    <div style=\"color: red;font-size:15px;font-weight:bold\">\r\n");
          out.write("                        제한된 계정입니다. 관리자에게 문의하세요.\r\n");
          out.write("                    </div>\r\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
